#---------------------------------------------------------------------
# HAProxy configuration for padogrid1. See the full configuration
# options online.
#
#   http://haproxy.1wt.eu/download/1.5/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    #log         127.0.0.1 local2
    log 127.0.0.1:514  local0

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    #option                  httplog
    option                  dontlognull
    option http-server-close
    #option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# Client frontend HTTP endpoints which terminate TLS traffic.
#   - Grafana: 3001 --> 3000
#   - Prometheus: 9091 --> 9090
#   - Hazelcast Management Center: 8081 --> 8080  
#---------------------------------------------------------------------
frontend grafana-frontend
    mode http
    # verify none is required for priviate certificate
    bind *:3001 ssl verify none crt /etc/ssl/certs/mosquitto-openssl.pem ca-file /etc/ssl/certs/mosquitto-ca.pem
    default_backend grafana-backend

backend grafana-backend
    mode http
    server grafana1 127.0.0.1:3000 check

frontend prometheus-frontend
    mode http
    # verify none is required for priviate certificate
    bind *:9091 ssl verify none crt /etc/ssl/certs/mosquitto-openssl.pem ca-file /etc/ssl/certs/mosquitto-ca.pem
    default_backend prometheus-backend

backend prometheus-backend
    mode http
    server prometheus1 127.0.0.1:9090 check

frontend hazelcast-mc-frontend
    mode http
    # verify none is required for priviate certificate
    bind *:8081 ssl verify none crt /etc/ssl/certs/mosquitto-openssl.pem ca-file /etc/ssl/certs/mosquitto-ca.pem
    default_backend hazelcast-mc-backend

backend hazelcast-mc-backend
    mode http
    server mc1 127.0.0.1:8080 check

#---------------------------------------------------------------------
# Mosquitto frontend which terminates SSL connections and proxies to
# the local Mosquitto cluster. (888x --> 188x)
#---------------------------------------------------------------------
frontend mosquitto-c1
    mode tcp
    bind *:8883 ssl verify required crt /etc/ssl/certs/mosquitto-openssl.pem ca-file /etc/ssl/certs/mosquitto-ca.pem
    default_backend mosquitto-s1

backend mosquitto-s1
    mode tcp
    server server1 127.0.0.1:1883 check

frontend mosquitto-c2
    mode tcp
    bind *:8884 ssl verify required crt /etc/ssl/certs/mosquitto-openssl.pem ca-file /etc/ssl/certs/mosquitto-ca.pem
    default_backend mosquitto-s2

backend mosquitto-s2
    mode tcp
    server server1 127.0.0.1:1884 check

frontend mosquitto-c3
    mode tcp
    bind *:8885 ssl verify required crt /etc/ssl/certs/mosquitto-openssl.pem ca-file /etc/ssl/certs/mosquitto-ca.pem
    default_backend mosquitto-s3

backend mosquitto-s3
    mode tcp
    server server1 127.0.0.1:1885 check
